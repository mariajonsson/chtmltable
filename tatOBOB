[1mdiff --git a/src/HTMLTable/SimpleHTMLTable.php b/src/HTMLTable/SimpleHTMLTable.php[m
[1mindex 83232b6..bf3cf12 100644[m
[1m--- a/src/HTMLTable/SimpleHTMLTable.php[m
[1m+++ b/src/HTMLTable/SimpleHTMLTable.php[m
[36m@@ -40,19 +40,26 @@[m [mclass SimpleHTMLTable {[m
     		$link = null;[m
     		$linkkey = null;[m
     		$val = '';[m
[31m-    		if (is_object($value)) { [m
[31m-    			$val = $value->{$column['name']};[m
[31m-    			[m
[31m-    			if (isset($column['linkkey'])) {[m
[31m-    				$linkkey = $value->{$column['linkkey']};[m
[31m-    			}[m
[32m+[m[41m    [m		[32mif (is_object($value)) {[m
[32m+[m		[32m  if(isset($value->{$column['name']})) {[m
[32m+[m		[32m    $val = $value->{$column['name']};[m
[32m+[m		[32m  }[m
[32m+[m		[32m  else $val = '';[m
[32m+[m[41m    [m		[32mif (isset($column['linkkey'])) {[m
[32m+[m		[32m  if (isset($value->{$column['linkkey']})) {[m
[32m+[m		[32m  $linkkey = $value->{$column['linkkey']};[m
[32m+[m		[32m  }[m
[32m+[m[41m    [m		[32m}[m
     		}[m
     		elseif (is_array($value)) {[m
[31m-    			[m
[31m-    			$val = $value[$column['name']];[m
[31m-    			if (isset($column['linkkey'])) {[m
[31m-    				$linkkey = $value[$column['linkkey']];[m
[31m-    			}[m
[32m+[m[41m    		[m
[32m+[m		[32mif(isset($value[$column['name']])) {[m
[32m+[m		[32m  $val = $value[$column['name']];[m
[32m+[m[41m    [m		[32m}[m
[32m+[m[41m    [m		[32melse $val = '';[m
[32m+[m[41m    [m		[32mif (isset($column['linkkey'])) {[m
[32m+[m		[32m  $linkkey = $value[$column['linkkey']];[m
[32m+[m[41m    [m		[32m}[m
     		}[m
     		if (isset($column['display']) && isset($column['displayformat'])) {[m
     		$val = $this->getDisplayVal($val, $column['display'], $column['displayformat']);[m
[36m@@ -87,23 +94,38 @@[m [mclass SimpleHTMLTable {[m
 	[m
   public function getDisplayVal($val, $displaytype=null, $format=null) {[m
   	$displayval = $val;[m
[31m-  	  switch ($displaytype) {[m
[32m+[m[41m  	[m
[32m+[m[41m  [m	[32mswitch ($displaytype) {[m
   	  [m
[31m-  	  case 'yes-no':[m
[31m-  	  	  if (empty($val) || $val === false || $val == 0) {[m
[31m-  	  	  	  $displayval = "No";[m
[31m-  	  	  }[m
[31m-  	  	  else $displayval = "Yes";[m
[31m-  	  	  [m
[31m-  	  	  break;[m
[32m+[m	[32mcase 'yes-no':[m
[32m+[m	[32m    if ($val === false || $val === 0) {[m
[32m+[m[41m  [m	[32m    $displayval = "No";[m
[32m+[m[41m  [m	[32m}[m
[32m+[m[41m  [m	[32m  elseif (empty($val) || $val === null) {[m
[32m+[m	[32m    $displayval = "No";[m
[32m+[m[41m  [m	[32m  }[m
[32m+[m
[32m+[m[41m  [m	[32m  else $displayval = "Yes";[m
[32m+[m[41m  [m	[32m  break;[m
   	  	  [m
   	  case 'convert-datestr':[m
[31m-  	  	  $displayval = date($format, strtotime($val));[m
[31m-  	  	  [m
[31m-  	  	  break;[m
[32m+[m	[32m    if (isset($format)) {[m
[32m+[m	[32m      $displayval = date($format, strtotime($val));[m
[32m+[m[41m  [m	[32m    }[m
[32m+[m[41m  [m	[32m    else $displayval = $val;[m
[32m+[m[41m  [m	[32m    break;[m
[32m+[m[41m  	  [m
[32m+[m[41m  [m	[32m  default :[m
[32m+[m[41m  	  [m
[32m+[m	[32m    $displayval = $val;[m
[32m+[m	[32m    break;[m
[32m+[m[41m	    [m
   	  }[m
   	  return $displayval;[m
   }[m
[32m+[m[41m  [m
[32m+[m[41m  [m
[32m+[m
 [m
   [m
 }[m
\ No newline at end of file[m
[1mdiff --git a/test/HTMLTable/SimpleHTMLTableTest.php b/test/HTMLTable/SimpleHTMLTableTest.php[m
[1mindex c399de4..cb2b28d 100644[m
[1m--- a/test/HTMLTable/SimpleHTMLTableTest.php[m
[1m+++ b/test/HTMLTable/SimpleHTMLTableTest.php[m
[36m@@ -6,36 +6,207 @@[m [mnamespace Meax\HTMLTable;[m
   * Creates an HTML table from an array or object.[m
   *[m
   */[m
[31m-[m
[32m+[m[32mclass Foo{};[m
 class SimpleHTMLTableTest extends \PHPUnit_Framework_TestCase[m
 {[m
 [m
[32m+[m
[32m+[m[32m  public function setUp()[m[41m [m
[32m+[m[32m  {[m
[32m+[m[32m  $this->tbl = new \Meax\HTMLTable\SimpleHTMLTable('test');[m
[32m+[m[32m  $this->twocolumns = array([[m[41m [m
[32m+[m[32m    'name' => 'fruits',[m[41m [m
[32m+[m[32m    'label' => 'Fruits'[m
[32m+[m[32m    ],[m[41m [m
[32m+[m[32m    [[m
[32m+[m[32m    'name' => 'animals',[m[41m [m
[32m+[m[32m    'label' => 'Animals'[m
[32m+[m[32m   ]);[m
[32m+[m[32m   $this->twocolslinks = array([[m
[32m+[m[32m      'name' => 'fruits',[m
[32m+[m[32m      'label' => 'Fruits',[m
[32m+[m[41m      [m
[32m+[m[32m    ],[m
[32m+[m[32m    [[m
[32m+[m[32m      'name' => 'animals',[m
[32m+[m[32m      'label' => 'Animals',[m
[32m+[m[32m      'linkbase' => 'https://en.wikipedia.org/wiki/',[m
[32m+[m[32m      'linkkey' => 'animals',[m
[32m+[m[41m      [m
[32m+[m[32m    ],[m
[32m+[m[32m    );[m
[32m+[m[32m  $this->valtwocols = array([[m
[32m+[m[32m    'fruits' => 'Apple',[m[41m [m
[32m+[m[32m    'animals' => 'Horse'[m
[32m+[m[32m    ],[m[41m [m
[32m+[m[32m    [[m
[32m+[m[32m    'fruits' => 'Banana',[m[41m [m
[32m+[m[32m    'animals' => 'Monkey'[m
[32m+[m[32m    ]);[m
[32m+[m[32m   $this->valtwocolsMissingval = array([[m
[32m+[m[32m    'fruits' => 'Apple',[m[41m [m
[32m+[m[32m    'animals' => 'Horse'[m
[32m+[m[32m    ],[m[41m [m
[32m+[m[32m    [[m
[32m+[m[32m    'animals' => 'Monkey'[m
[32m+[m[32m    ]);[m
[32m+[m[32m   $this->twocolsDisplay = array([[m
[32m+[m[32m      'name' => 'date',[m
[32m+[m[32m      'label' => 'Date',[m
[32m+[m[32m      'display' => 'convert-datestr',[m
[32m+[m[32m      'displayformat' => 'Y-m-d',[m
[32m+[m[32m    ],[m
[32m+[m[32m    [[m
[32m+[m[32m      'name' => 'title',[m
[32m+[m[32m      'label' => 'Title',[m
[32m+[m[41m            [m
[32m+[m[32m    ],[m
[32m+[m[32m    [[m
[32m+[m[32m      'name' => 'published',[m
[32m+[m[32m      'label' => 'Published',[m
[32m+[m[32m      'display' => 'yes-no',[m[41m     [m
[32m+[m[32m    ]);[m
[32m+[m[32m    $this->valtwocolsDisplay = array([m
[32m+[m[32m      [[m
[32m+[m[32m      'date' => '2015-05-15 12:14',[m[41m [m
[32m+[m[32m      'title' => 'A blog post',[m
[32m+[m[32m      'published' => true,[m
[32m+[m[32m       ],[m
[32m+[m[32m      [[m
[32m+[m[32m      'date' => '2015-05-16 13:15',[m[41m [m
[32m+[m[32m      'title' => 'Another post',[m
[32m+[m[32m      'published' => false,[m
[32m+[m[32m       ],[m
[32m+[m[32m    );[m
[32m+[m[41m    [m
[32m+[m[32m    $object1 = new Foo();[m
[32m+[m[32m    $object1->fruits = 'Apple';[m
[32m+[m[32m    $object1->animals = 'Horse';[m
[32m+[m[41m    [m
[32m+[m[32m    $object2 = new Foo();[m
[32m+[m[32m    $object2->fruits = 'Banana';[m
[32m+[m[32m    $object2->animals = 'Monkey';[m
[32m+[m[41m    [m
[32m+[m[32m    $object3 = new Foo();[m
[32m+[m[32m    $object3->animals = 'Monkey';[m
[32m+[m[41m    [m
[32m+[m[32m    $this->valtwocolsObject = array($object1, $object2);[m
[32m+[m[32m    $this->valtwocolsObjectmissing = array($object1, $object3);[m
[32m+[m[41m   [m
  [m
[32m+[m[32m  }[m
[32m+[m[41m [m
[32m+[m
[32m+[m[41m  [m
   /**[m
[31m- * Test [m
[32m+[m[32m * Test table headers with column data[m
  *[m
  * @return void[m
  *[m
  */[m
[31m-  public function testCreateTable_th()[m
[32m+[m[32m  public function testCreateTable_thtd()[m
   {[m
   [m
[31m-  $tbl = new \Meax\HTMLTable\SimpleHTMLTable('test');[m
[32m+[m[32m  //Test just headers[m
[32m+[m[32m  $table = $this->tbl->createTable($this->twocolumns, null, "tablename");[m
[32m+[m[32m  $this->assertEquals( $table, "<table id='tablename'><tr><th>Fruits</th><th>Animals</th></tr></table>" );[m[41m  [m
[32m+[m[41m [m
[32m+[m[32m  //Test headers and column data[m
[32m+[m[32m  $table = $this->tbl->createTable($this->twocolumns, $this->valtwocols);[m
[32m+[m[32m  $this->assertEquals( $table, "<table id=''><tr><th>Fruits</th><th>Animals</th></tr><tr><td>Apple</td><td>Horse</td></tr><tr><td>Banana</td><td>Monkey</td></tr></table>" );[m
   [m
[31m-  $table = $tbl->createTable(array([ 'name' => 'fruits', 'label' => 'Fruits'], ['name' => 'animals', 'label' => 'Animals']),null,"tablename");[m
[31m-  $this->assertEquals( $table, "<table id='tablename'><tr><th>Fruits</th><th>Animals</th></tr></table>" );[m
[32m+[m[32m  //Test table with links, insert array[m
[32m+[m[32m  $table = $this->tbl->createTable($this->twocolslinks, $this->valtwocols);[m
[32m+[m[32m  $this->assertEquals( $table, '<table id=\'\'><tr><th>Fruits</th><th>Animals</th></tr><tr><td>Apple</td><td><a href="https://en.wikipedia.org/wiki/Horse">Horse</a></td></tr><tr><td>Banana</td><td><a href="https://en.wikipedia.org/wiki/Monkey">Monkey</a></td></tr></table>' );[m
   [m
[31m- [m
[32m+[m[32m  //Test table with links, insert object[m
[32m+[m[32m  $table = $this->tbl->createTable($this->twocolslinks, $this->valtwocolsObject);[m
[32m+[m[32m  $this->assertEquals( $table, '<table id=\'\'><tr><th>Fruits</th><th>Animals</th></tr><tr><td>Apple</td><td><a href="https://en.wikipedia.org/wiki/Horse">Horse</a></td></tr><tr><td>Banana</td><td><a href="https://en.wikipedia.org/wiki/Monkey">Monkey</a></td></tr></table>' );[m
[32m+[m[41m  [m
[32m+[m[32m  //Test table with links, insert object with missing value[m
[32m+[m[32m  $table = $this->tbl->createTable($this->twocolslinks, $this->valtwocolsObjectmissing);[m
[32m+[m[32m  $this->assertEquals( $table, '<table id=\'\'><tr><th>Fruits</th><th>Animals</th></tr><tr><td>Apple</td><td><a href="https://en.wikipedia.org/wiki/Horse">Horse</a></td></tr><tr><td></td><td><a href="https://en.wikipedia.org/wiki/Monkey">Monkey</a></td></tr></table>' );[m
[32m+[m[41m  [m
[32m+[m[32m  //Test a table where some data is missing[m
[32m+[m[32m  $table = $this->tbl->createTable($this->twocolumns, $this->valtwocolsMissingval);[m
[32m+[m[32m  $this->assertEquals( $table, "<table id=''><tr><th>Fruits</th><th>Animals</th></tr><tr><td>Apple</td><td>Horse</td></tr><tr><td></td><td>Monkey</td></tr></table>" );[m
[32m+[m[41m  [m
[32m+[m[32m  //Test a table with display[m
[32m+[m[32m  $table = $this->tbl->createTable($this->twocolsDisplay, $this->valtwocolsDisplay);[m
[32m+[m[32m  $this->assertEquals( $table, "<table id=''><tr><th>Date</th><th>Title</th><th>Published</th></tr><tr><td>2015-05-15</td><td>A blog post</td><td>Yes</td></tr><tr><td>2015-05-16</td><td>Another post</td><td>No</td></tr></table>" );[m
   [m
   }[m
[31m-  public function testCreateTable_thtd()[m
[32m+[m[41m  [m
[32m+[m[32m    /**[m
[32m+[m[32m * Test case default for DisplayVal[m
[32m+[m[32m *[m
[32m+[m[32m * @return void[m
[32m+[m[32m *[m
[32m+[m[32m */[m
[32m+[m[41m  [m
[32m+[m[32m  public function testGetDisplayVal()[m[41m [m
   {[m
   [m
[31m-  $tbl = new \Meax\HTMLTable\SimpleHTMLTable('test');[m
[32m+[m[32m    $display = $this->tbl->getDisplayVal('Hello');[m
[32m+[m[32m    $this->assertEquals( $display, 'Hello');[m
   [m
[31m-  $table = $tbl->createTable(array([ 'name' => 'fruits', 'label' => 'Fruits'], ['name' => 'animals', 'label' => 'Animals']), array(['fruits' => 'Apple', 'animals' => 'Horse'], ['fruits' => 'Banana', 'animals' => 'Monkey']));[m
[31m-  $this->assertEquals( $table, "<table id=''><tr><th>Fruits</th><th>Animals</th></tr><tr><td>Apple</td><td>Horse</td></tr><tr><td>Banana</td><td>Monkey</td></tr></table>" );[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m * Test case 'yes-no' for DisplayVal with result "Yes"[m
[32m+[m[32m *[m
[32m+[m[32m * @return void[m
[32m+[m[32m *[m
[32m+[m[32m */[m
[32m+[m[41m  [m
[32m+[m[32m  public function testGetDisplayVal_yn_yes()[m[41m [m
[32m+[m[32m  {[m
[32m+[m[41m  [m
[32m+[m[32m    $display = $this->tbl->getDisplayVal(true, 'yes-no');[m
[32m+[m[32m    $this->assertEquals( $display, 'Yes');[m
[32m+[m[32m    $display = $this->tbl->getDisplayVal('Yes', 'yes-no');[m
[32m+[m[32m    $this->assertEquals( $display, 'Yes');[m
[32m+[m[32m    $display = $this->tbl->getDisplayVal(1, 'yes-no');[m
[32m+[m[32m    $this->assertEquals( $display, 'Yes');[m
[32m+[m[41m  [m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m/**[m
[32m+[m[32m * Test case 'yes-no' for DisplayVal with result "No"[m
[32m+[m[32m *[m
[32m+[m[32m * @return void[m
[32m+[m[32m *[m
[32m+[m[32m */[m
[32m+[m[41m  [m
[32m+[m[32m    public function testGetDisplayVal_yn_no()[m[41m [m
[32m+[m[32m  {[m
[32m+[m[41m  [m
[32m+[m[32m    $display = $this->tbl->getDisplayVal(false, 'yes-no');[m
[32m+[m[32m    $this->assertEquals( $display, 'No');[m
[32m+[m[32m    $display = $this->tbl->getDisplayVal(null, 'yes-no');[m
[32m+[m[32m    $this->assertEquals( $display, 'No');[m
[32m+[m[32m     $display = $this->tbl->getDisplayVal(0, 'yes-no');[m
[32m+[m[32m    $this->assertEquals( $display, 'No');[m
[32m+[m[32m    $display = $this->tbl->getDisplayVal('', 'yes-no');[m
[32m+[m[32m    $this->assertEquals( $display, 'No');[m
[32m+[m[41m  [m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  /**[m
[32m+[m[32m * Test case 'convert-datestr' for DisplayVal[m
[32m+[m[32m *[m
[32m+[m[32m * @return void[m
[32m+[m[32m *[m
[32m+[m[32m */[m
[32m+[m[41m  [m
[32m+[m[32m  public function testGetDisplayVal_convertdatestr()[m[41m [m
[32m+[m[32m  {[m
[32m+[m[41m  [m
[32m+[m[32m    $display = $this->tbl->getDisplayVal('2015-05-15', 'convert-datestr', 'Y-m-d H:i');[m
[32m+[m[32m    $this->assertEquals( $display, '2015-05-15 00:00');[m
   [m
[32m+[m[32m    $display = $this->tbl->getDisplayVal('2015-05-15', 'convert-datestr');[m
[32m+[m[32m    $this->assertEquals( $display, '2015-05-15');[m
   }[m
   [m
   }[m
\ No newline at end of file[m
